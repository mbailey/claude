#!/usr/bin/env bash

# claude-symlink-mcp-logs - Create a symlink to Claude Code MCP logs in the current project
# This makes it easy to access MCP server logs from within your project directory

set -euo pipefail

# Get the current working directory
PROJECT_DIR="$(pwd)"

# Convert the project path to the cache directory format
# Replace / with - and handle the home directory
CACHE_PATH="${PROJECT_DIR/$HOME/}"
CACHE_PATH="-home-${USER}${CACHE_PATH//\//-}"

# Full path to the cache directory
CACHE_DIR="$HOME/.cache/claude-cli-nodejs/${CACHE_PATH}"

# Check if cache directory exists
if [[ ! -d "${CACHE_DIR}" ]]; then
    echo "Error: Cache directory not found: ${CACHE_DIR}"
    echo "Have you run Claude Code in this project yet?"
    exit 1
fi

# Set the .claude directory path
CLAUDE_DIR="${PROJECT_DIR}/.claude"

# Check if .claude directory exists, if not create it with user confirmation
if [[ ! -d "${CLAUDE_DIR}" ]]; then
    echo "The .claude directory doesn't exist in this project."
    read -p "Create .claude directory? (y/N) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Aborted."
        exit 0
    fi
    mkdir -p "${CLAUDE_DIR}"
fi

# Create or update the symlink
SYMLINK_PATH="${CLAUDE_DIR}/cache"
if [[ -L "${SYMLINK_PATH}" ]]; then
    echo "Updating existing symlink..."
    rm "${SYMLINK_PATH}"
elif [[ -e "${SYMLINK_PATH}" ]]; then
    echo "Error: ${SYMLINK_PATH} exists but is not a symlink"
    exit 1
fi

# Create relative symlink for portability
RELATIVE_PATH="$(realpath --relative-to="${CLAUDE_DIR}" "${CACHE_DIR}")"
ln -s "${RELATIVE_PATH}" "${SYMLINK_PATH}"

echo "âœ“ Created symlink: .claude/cache -> ${RELATIVE_PATH}"
echo ""
echo "You can now access MCP logs at: .claude/cache/mcp-logs-*"

# List available MCP logs if any exist
if ls "${CACHE_DIR}"/mcp-logs-* >/dev/null 2>&1; then
    echo ""
    echo "Available MCP server logs:"
    ls -1 "${CACHE_DIR}"/mcp-logs-* | sed 's/.*\//  - /'
fi