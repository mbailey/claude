# Bash completion for claude command
# Generated by generate-claude-completion

_claude() {
    local cur prev opts commands
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]:-}"
    prev="${COMP_WORDS[COMP_CWORD-1]:-}"
    
    # Main options
    opts="-d --debug --verbose -p --print --output-format --mcp-debug --dangerously-skip-permissions --allowedTools --disallowedTools --mcp-config -c --continue -r --resume --model -v --version -h --help"
    
    # Commands
    commands="config mcp migrate-installer doctor update"
    
    # Handle commands
    if [[ ${COMP_CWORD} -eq 1 ]]; then
        # First argument - could be option or command
        COMPREPLY=( $(compgen -W "${opts} ${commands}" -- "${cur}") )
        return 0
    fi
    
    case "${prev}" in
        --output-format)
            COMPREPLY=( $(compgen -W "text json stream-json" -- "${cur}") )
            return 0
            ;;
        --model)
            # Common model aliases
            COMPREPLY=( $(compgen -W "sonnet opus haiku claude-sonnet-4-20250514 claude-opus-4-20250514" -- "${cur}") )
            return 0
            ;;
        config)
            if [[ ${COMP_CWORD} -eq 2 ]]; then
                COMPREPLY=( $(compgen -W "set get list" -- "${cur}") )
            elif [[ ${COMP_CWORD} -eq 3 ]] && [[ "${COMP_WORDS[2]}" == "set" ]]; then
                COMPREPLY=( $(compgen -W "-g --global" -- "${cur}") )
            fi
            return 0
            ;;
        mcp)
            if [[ ${COMP_CWORD} -eq 2 ]]; then
                COMPREPLY=( $(compgen -W "add remove list" -- "${cur}") )
            fi
            return 0
            ;;
        -r|--resume)
            # Could complete with session IDs, but that would require querying claude
            return 0
            ;;
        --allowedTools|--disallowedTools)
            # Common tools
            COMPREPLY=( $(compgen -W "Bash Edit Write Read Grep Glob LS Task" -- "${cur}") )
            return 0
            ;;
        --mcp-config)
            # File completion
            COMPREPLY=( $(compgen -f -- "${cur}") )
            return 0
            ;;
    esac
    
    # Check if we're in a command context
    local cmd=""
    local i
    for ((i=1; i < COMP_CWORD; i++)); do
        if [[ " ${commands} " =~ " ${COMP_WORDS[i]} " ]]; then
            cmd="${COMP_WORDS[i]}"
            break
        fi
    done
    
    # If no command found, complete with options
    if [[ -z "${cmd}" ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
    fi
    
    return 0
}

# Only setup completion if running in bash
if [[ -n "${BASH_VERSION:-}" ]]; then
    complete -F _claude claude
fi
